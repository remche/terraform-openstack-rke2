name: Full tests
on: [workflow_dispatch]
jobs:
  full:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include:
          - TEST: "blue-green-nodes"
          - TEST: "cinder-csi-plugin"
          - TEST: "edge-node"
          - TEST: "jupyterhub"
    env:
      SONOBUOY_VERSION: 0.51.0
      OS_AUTH_URL: ${{ secrets.OS_AUTH_URL }}
      OS_IDENTITY_API_VERSION:  ${{ secrets.OS_IDENTITY_API_VERSION }}
      OS_PASSWORD:  ${{ secrets.OS_PASSWORD }}
      OS_PROJECT_ID:  ${{ secrets.OS_PROJECT_ID }}
      OS_PROJECT_NAME:  ${{ secrets.OS_PROJECT_NAME }}
      OS_REGION_NAME:  ${{ secrets.OS_REGION_NAME }}
      OS_USERNAME:  ${{ secrets.OS_USERNAME }}
      OS_USER_DOMAIN_NAME:  ${{ secrets.OS_USER_DOMAIN_NAME }}
    environment: nova
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
        terraform_wrapper: false
    - name: Set up ssh-agent
      run: ssh-agent  -s |grep -E '^(SSH_AUTH_SOCK|SSH_AGENT_PID)'|cut -f1 -d ';' >> $GITHUB_ENV
    - name: Create and add key to ssh-agent
      run: ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa && ssh-add
    - name: Using local module source
      run: sed -i "s+remche/rke2/openstack+./../..+" main.tf
      working-directory: examples/${{ matrix.TEST }}
    - name: Terraform init
      run: terraform init
      working-directory: examples/${{ matrix.TEST }}
    - name: Terraform apply
      run: TF_VAR_cluster_name=$GITHUB_RUN_ID-${{ matrix.TEST }} terraform apply -auto-approve -lock=false | grep -v remote-exec
      working-directory: examples/${{ matrix.TEST }}
    - name: Wait for cluster to be available
      run: |
        K8S_API_SERVER=$(terraform output -raw server_ip)
        until (nc -z $K8S_API_SERVER 6443); do echo Wait for master node && sleep 10; done;
      working-directory: examples/${{ matrix.TEST }}
    - uses: azure/setup-kubectl@v3.2
    - name: Wait for nodes to be ready
      run: kubectl wait nodes --all --for=condition=ready --kubeconfig $(pwd)/rke2.yaml --timeout -1s
      working-directory: examples/${{ matrix.TEST }}
    - name: Download and run Sonobuoy
      run: |
        curl -L https://github.com/vmware-tanzu/sonobuoy/releases/download/v{$SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz -o -| tar xvz sonobuoy
        ./sonobuoy run --kubeconfig $(pwd)/rke2.yaml --wait --mode quick --plugin-env e2e.E2E_EXTRA_ARGS=--non-blocking-taints=CriticalAddonsOnly
      working-directory: examples/${{ matrix.TEST }}
    - name: Terraform destroy
      if: ${{ always() }}
      run: TF_VAR_cluster_name=$GITHUB_RUN_ID-${{ matrix.TEST }} terraform destroy -auto-approve -lock=false
      working-directory: examples/${{ matrix.TEST }}
